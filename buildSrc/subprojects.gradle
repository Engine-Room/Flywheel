loom {
    silentMojangMappingsLicense()

    mixin {
        defaultRefmapName = "flywheel.refmap.json"
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        name 'tterrag maven'
        url 'https://maven.tterrag.com/'
    }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings(loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    })

    api 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    var replaceProperties = [
        mod_id                        : mod_id,
        mod_name                      : mod_name,
        mod_description               : mod_description,
        mod_license                   : mod_license,
        mod_sources                   : mod_sources,
        mod_issues                    : mod_issues,
        mod_homepage                  : mod_homepage,
        mod_version                   : mod_version,
        minecraft_semver_version_range: minecraft_semver_version_range,
        minecraft_maven_version_range : minecraft_maven_version_range,
        fabric_api_version_range      : fabric_api_version_range,
        forge_version_range           : forge_version_range,
    ]
    inputs.properties replaceProperties

    filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    repositories {
        maven {
            url "file://${rootProject.projectDir}/mcmodsrepo"
        }

        if (project.hasProperty('mavendir')) {
            maven { url rootProject.file(property('mavendir')) }
        }
    }
}
