
sourceSets.configureEach {
    setupGeneratePackageInfos(it)
}

def setupGeneratePackageInfos(SourceSet sourceSet) {
    // We have to capture the source set name for the lazy string literals,
    // otherwise it'll just be whatever the last source set is in the list.
    def sourceSetName = sourceSet.name
    def taskName = sourceSet.getTaskName('generate', 'PackageInfos')
    def task = tasks.register(taskName, GeneratePackageInfosTask) {
        group = 'flywheel'
        description = "Generates package-info files for $sourceSetName packages."

        // Only apply to default source directory since we also add the generated
        // sources to the source set.
        sourceRoot = file("src/$sourceSetName/java")
        outputDir = file("src/$sourceSetName/generatedPackageInfos")
    }
    sourceSet.java.srcDir task

    tasks.named('ideaSyncTask').configure {
        finalizedBy task
    }

    def cleanTask = tasks.register(sourceSet.getTaskName('clean', 'PackageInfos'), Delete) {
        group = 'flywheel'
        delete file("src/$sourceSetName/generatedPackageInfos")
    }
    clean.dependsOn cleanTask
}
